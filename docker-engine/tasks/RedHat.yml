---
- name: Remove old docker packages
  yum: name={{ item }} state=absent
  loop:
    - docker
    - docker-client
    - docker-client-latest
    - docker-common
    - docker-latest
    - docker-latest-logrotate
    - docker-logrotate
    - docker-selinux
    - docker-engine-selinux
    - docker-engine

- name: Install required packages
  yum: name={{ item }} state=present
  loop:
    - yum-utils
    - device-mapper-persistent-data
    - lvm2

- name: Add docker repository key
  rpm_key:
    key: https://download.docker.com/linux/{{ ansible_distribution|lower }}/gpg
    state: present

- name: Add docker repository
  get_url:
    url: https://download.docker.com/linux/{{ ansible_distribution|lower }}/docker-ce.repo
    dest: /etc/yum.repos.d/docker-ce.repo
    owner: root
    group: root
    mode: 0644

- name: Install docker engine
  yum: name=docker-ce state=present

- name: Check current docker-compose version.
  command: docker-compose --version
  register: docker_compose_current_version
  changed_when: false
  failed_when: false

- name: Delete existing docker-compose
  file:
    path: /usr/local/bin/docker-compose
    state: absent
  when: docker_compose_current_version.stdout is defined and docker_compose_version not in docker_compose_current_version.stdout

- name: Install Docker Compose
  get_url:
    url: https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ ansible_system }}-{{ ansible_machine }}
    dest: /usr/local/bin/docker-compose
    mode: 0755

- name: Ensure that docker service is started
  service: name=docker state=started enabled=yes

- name: Add the docker administrators to the Docker group
  user: name={{ item }} groups=docker append=true
  loop: "{{ docker_admin_users }}"
  when: docker_admin_users is defined
#  notify: refresh_groups
